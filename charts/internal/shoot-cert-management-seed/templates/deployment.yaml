---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cert-management.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    helm.sh/chart: {{ include "cert-management.chart" . }}
    app.kubernetes.io/name: {{ include "cert-management.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    high-availability-config.resources.gardener.cloud/type: controller
spec:
  revisionHistoryLimit: 2
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cert-management.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/issuers: {{ toYaml .Values.issuers | sha256sum }}
        {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "cert-management.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        gardener.cloud/role: controlplane
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.resources.gardener.cloud/to-kube-apiserver-tcp-443: allowed
    spec:
      priorityClassName: gardener-system-200
      containers:
      - name: {{ .Chart.Name }}
        image: {{ index .Values.images "cert-management" }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          name: kubeconfig
          readOnly: true
        {{- if .Values.configuration.caCertificates }}
        - name: ca-certificates
          mountPath: /var/run/cert-manager/certs
          readOnly: true
        {{- end }}
        args:
        - --name={{ include "cert-management.fullname" . }}
        - --namespace=kube-system
        - --source=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - --issuer.issuer-namespace={{ .Release.Namespace }}
        - --issuer.default-issuer={{ .Values.defaultIssuer.name }}
        {{- if .Values.configuration.defaultRequestsPerDayQuota }}
        - --issuer.default-requests-per-day-quota={{ .Values.configuration.defaultRequestsPerDayQuota }}
        {{- end }}
        {{- if .Values.defaultIssuer.restricted }}
        - --issuer.default-issuer-domain-ranges={{ .Values.defaultIssuer.domains }}
        {{- end }}
        {{- if .Values.configuration.precheckNameservers }}
        - --issuer.precheck-nameservers={{ .Values.configuration.precheckNameservers }}
        {{- end }}
        {{- if .Values.dnsChallengeOnShoot.enabled }}
        - --dns=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - --issuer.dns-namespace={{ .Values.dnsChallengeOnShoot.namespace }}
        {{- if .Values.dnsChallengeOnShoot.dnsClass }}
        - --issuer.dns-class={{ .Values.dnsChallengeOnShoot.dnsClass }}
        {{- end }}
        {{- else }}
        - --issuer.dns-namespace={{ .Release.Namespace }}
        {{- end }}
        - --server-port-http={{ .Values.configuration.serverPortHttp }}
        - --ingress-cert.targets.pool.size={{ .Values.configuration.ingressCertWorkers }}
        - --service-cert.targets.pool.size={{ .Values.configuration.certWorkers }}
        - --issuer.default.pool.size={{ .Values.configuration.issuerWorkers }}
        {{- if .Values.configuration.propagationTimeout }}
        - --propagation-timeout={{ .Values.configuration.propagationTimeout }}
        {{- end }}
        {{- if .Values.shootIssuers.enabled }}
        - --allow-target-issuers
        {{- end }}
        {{- if .Values.configuration.deactivateAuthorizations }}
        - --acme-deactivate-authorizations
        {{- end }}
        - --lease-name=shoot-cert-service
        - --lease-resource-lock=leases
        {{- range $idx, $flag := .Values.additionalConfiguration }}
        - {{ $flag }}
        {{- end }}
        {{- if .Values.configuration.privateKeyDefaults.algorithm }}
        - --default-private-key-algorithm={{ .Values.configuration.privateKeyDefaults.algorithm }}
        {{- end }}
        {{- if .Values.configuration.privateKeyDefaults.sizeRSA }}
        - --default-rsa-private-key-size={{ .Values.configuration.privateKeyDefaults.sizeRSA }}
        {{- end }}
        {{- if .Values.configuration.privateKeyDefaults.sizeECDSA }}
        - --default-ecdsa-private-key-size={{ .Values.configuration.privateKeyDefaults.sizeECDSA }}
        {{- end }}
        {{- if .Values.configuration.caCertificates }}
        env:
        - name: LEGO_CA_SYSTEM_CERT_POOL
          value: "true"
        - name: LEGO_CA_CERTIFICATES
          value: /var/run/cert-manager/certs/certs.pem
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.configuration.serverPortHttp }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.configuration.serverPortHttp }}
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      volumes:
      - name: kubeconfig
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: kubeconfig
                path: kubeconfig
              name: {{ .Values.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
              - key: token
                path: token
              name: {{ .Values.shootClusterSecret }}
              optional: false
      {{- if .Values.configuration.caCertificates }}
      - name: ca-certificates
        configMap:
          name: {{ include "cert-management.fullname" . }}-ca-certificates
      {{- end }}
      serviceAccountName: {{ include "cert-management.name" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
