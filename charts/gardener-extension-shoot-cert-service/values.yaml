image:
  repository: europe-docker.pkg.dev/gardener-project/public/gardener/extensions/shoot-cert-service
  tag: latest
  pullPolicy: IfNotPresent

leaderElection:
  resourceLock: leases

# settings for metrics, e.g. scraping by seed-prometheus
metrics:
  enableScraping: true
  # default metrics endpoint in controller-runtime
  port: 8080

webhookConfig:
  serverPort: 10250

resources: {}

vpa:
  enabled: true
  # resourcePolicy:
  #   minAllowed:
  #     memory: 128Mi
  updatePolicy:
    updateMode: "Auto"

controllers:
  concurrentSyncs: 5
  ignoreOperationAnnotation: false
  healthcheck:
    concurrentSyncs: 5
  heartbeat: 
    renewIntervalSeconds: 30
# garden:
#   concurrentSyncs: 1
# certificate:
#   concurrentSyncs: 1

certificateConfig:
  # defaultRequestsPerDayQuota: 100
  defaultIssuer:
    restricted: true # restrict default issuer to any sub-domain of shoot.spec.dns.domain
    name: gardener
  # acme:
  #   email: john.doe@example.com
  #   server: https://acme-v02.api.letsencrypt.org/directory
  #   propagationTimeout: 60s # TTL for DNS01 challenges.
  #   privateKey: | # Optional key for Let's Encrypt account.
  #     -----BEGIN BEGIN RSA PRIVATE KEY-----
  #     ...
  #     -----END RSA PRIVATE KEY-----

  # ca: # use own root or intermediate certifcate for a CA issuer as alternative to ACME issuer,
  #   certificate: | # CA certificate
  #    -----BEGIN CERTIFICATE-----
  #    ...
  #    -----END CERTIFICATE-----
  #   certificateKey: | # CA certificate key
  #    -----BEGIN PRIVATE KEY-----
  #    ...
  #    -----END PRIVATE KEY-----

  #precheckNameservers: 8.8.8.8,8.8.4.4

  #caCertificates: | # optional custom CA certificates when using private ACME provider
  #  -----BEGIN CERTIFICATE-----
  #  ...
  #  -----END CERTIFICATE-----
  #
  #  -----BEGIN CERTIFICATE-----
  #  ...
  #  -----END CERTIFICATE-----

  #inClusterACMEServerNamespaceMatchLabel:
  # cert.gardener.cloud/cluster-acme-server: "true" # label to select the in-cluster ACME server namespace

  shootIssuers:
    enabled: false # if true, allows to specify issuers in the shoot clusters

  deactivateAuthorizations: true # if true, enables flag --acme-deactivate-authorizations in cert-controller-manager

  skipDNSChallengeValidation: false # if true, enables skipping dns-challenges in cert-controller-manager

disableControllers: []

# imageVectorOverwrite: |
#   images:
#   - name: cert-management
#     sourceRepository: github.com/gardener/cert-management
#     repository: europe-docker.pkg.dev/gardener-project/cert-controller-manager
#     tag: "0.2.9"

gardenerCertificates:
  seed:
    enabled: false # if true, a special cert-controller-manager is deployed to provide the TLS certificate for the seed ingress domain
  # dnsSecretRole: internal-domain # the "gardener.cloud/role" label to select the DNS secret in the seed namespace on the virtual garden to be used for DNS challenges
  runtimeCluster:
    enabled: false # if true, a special cert-controller-manager is deployed to provide the TLS certificate for the virtual cluster kube-apiserver and garden ingress domain
    virtualKubeAPIServerIncludePrimaryDomain: false # if true, the first domain name of the virtual cluster kube-apiserver is included for TLS SNI config

gardener:
  version: ""
  seed:
  # ingressDomain:
  runtimeCluster:
    enabled: false
