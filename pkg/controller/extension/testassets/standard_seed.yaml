
---
# Source: shoot-cert-management-seed/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cert-controller-manager
  namespace: shoot--foo--bar
  labels:
    app.kubernetes.io/name: shoot-cert-management-seed
    app.kubernetes.io/instance: shoot-cert-management-seed
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: shoot-cert-management-seed
      app.kubernetes.io/instance: shoot-cert-management-seed
  unhealthyPodEvictionPolicy: AlwaysAllow
---
# Source: shoot-cert-management-seed/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shoot-cert-management-seed
  namespace: shoot--foo--bar
  labels:
    app.kubernetes.io/name: shoot-cert-management-seed
    app.kubernetes.io/instance: shoot-cert-management-seed
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: false
---
# Source: shoot-cert-management-seed/templates/issuer.yaml
apiVersion: v1
kind: Secret
metadata:
  name: extension-shoot-cert-service-issuer-garden
  namespace: shoot--foo--bar
type: Opaque
data: {}
  # redacted
---
# Source: shoot-cert-management-seed/templates/ca-certificats-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cert-controller-manager-ca-certificates
  namespace: shoot--foo--bar
  labels:
    helm.sh/chart: shoot-cert-management-seed-0.1.0
    app.kubernetes.io/name: shoot-cert-management-seed
    app.kubernetes.io/instance: shoot-cert-management-seed
    app.kubernetes.io/managed-by: Helm
data:
  certs.pem:  |
    -----BEGIN CERTIFICATE-----
    ...
    -----END CERTIFICATE-----
---
# Source: shoot-cert-management-seed/templates/configmap-observability.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cert-controller-manager-observability-config
  namespace: shoot--foo--bar
  labels:
    extensions.gardener.cloud/configuration: monitoring
data:
  scrape_config: |
    - job_name: cert-controller-manager
      scheme: http
      honor_labels: false
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: [shoot--foo--bar]
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
        action: keep
        regex: cert-controller-manager;metrics
      # common metrics
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [ __meta_kubernetes_pod_name ]
        target_label: pod
      metric_relabel_configs:
      - source_labels: [ __name__ ]
        regex: ^(cert_management_.+)$
        action: keep
  alerting_rules: |
    cert-controller-manager.rules.yaml: |
      groups:
      - name: cert-controller-manager.rules
        rules:
        - alert: SslCertificateWillExpireSoon
          expr: ((cert_management_cert_object_expire > 0) - time()) / 86400 <= 15
          for: 30m
          labels:
            service: cert-controller-manager
            severity: critical
            type: seed
            visibility: operator
          annotations:
            description: Certificate in namespace shoot--foo--bar will expire in less than 15 days.
            summary: TLS certificate will expire in less than 15 days

  dashboard_operators: |
    cert-controller-manager-dashboard.json: |-
      {
        "annotations": {
          "list": []
        },
        "editable": true,
        "timezone": "browser",
        "title": "Cert Controller Manager",
        "uid": "cert-controller-manager",
        "version": 1
      }

  dashboard_users: |
    cert-controller-manager-dashboard.json: |-
      {
        "annotations": {
          "list": []
        },
        "editable": true,
        "timezone": "browser",
        "title": "Cert Controller Manager",
        "uid": "cert-controller-manager",
        "version": 1
      }
---
# Source: shoot-cert-management-seed/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: extensions.gardener.cloud:extension-shoot-cert-service
  namespace: shoot--foo--bar
  labels:
    app.kubernetes.io/name: gardener-extension-shoot-cert-service
    app.kubernetes.io/instance: shoot-cert-management-seed
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - gardener-extension-shoot-cert-service
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - dns.gardener.cloud
    resources:
      - dnsentries
    verbs:
      - get
      - list
      - update
      - watch
      - create
      - delete
  - apiGroups:
      - "cert.gardener.cloud"
    resources:
      - issuers
      - issuers/status
    verbs:
      - get
      - update
      - list
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - create
      - get
      - update
      - patch
      - delete
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: shoot-cert-management-seed/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: shoot-cert-management-seed
  namespace: shoot--foo--bar
  labels:
    app.kubernetes.io/name: shoot-cert-management-seed
    app.kubernetes.io/instance: shoot-cert-management-seed
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extensions.gardener.cloud:extension-shoot-cert-service
subjects:
  - kind: ServiceAccount
    name: shoot-cert-management-seed
    namespace: shoot--foo--bar
---
# Source: shoot-cert-management-seed/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cert-controller-manager
  namespace: shoot--foo--bar
  annotations:
    networking.resources.gardener.cloud/from-all-scrape-targets-allowed-ports: '[{"port":10258,"protocol":"TCP"}]'
    # TODO: This label approach is deprecated and no longer needed in the future. Remove them as soon as gardener/gardener@v1.75 has been released.
    networking.resources.gardener.cloud/from-policy-pod-label-selector: all-scrape-targets
    networking.resources.gardener.cloud/from-policy-allowed-ports: '[{"port":10258,"protocol":"TCP"}]'
  labels:
    app.kubernetes.io/name: shoot-cert-management-seed
    app.kubernetes.io/instance: shoot-cert-management-seed
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: metrics
      port: 10258
      protocol: TCP
  selector:
    app.kubernetes.io/name: shoot-cert-management-seed
    app.kubernetes.io/instance: shoot-cert-management-seed
---
# Source: shoot-cert-management-seed/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-controller-manager
  namespace: shoot--foo--bar
  labels:
    helm.sh/chart: shoot-cert-management-seed-0.1.0
    app.kubernetes.io/name: shoot-cert-management-seed
    app.kubernetes.io/instance: shoot-cert-management-seed
    app.kubernetes.io/managed-by: Helm
    high-availability-config.resources.gardener.cloud/type: controller
spec:
  revisionHistoryLimit: 2
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: shoot-cert-management-seed
      app.kubernetes.io/instance: shoot-cert-management-seed
  template:
    metadata:
      annotations:
        checksum/issuers: 912687183a88d461c57265eaa414317684e4085c161bb5e51bde7e9fe9027d77
      labels:
        app.kubernetes.io/name: shoot-cert-management-seed
        app.kubernetes.io/instance: shoot-cert-management-seed
        gardener.cloud/role: controlplane
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.resources.gardener.cloud/to-kube-apiserver-tcp-443: allowed
    spec:
      priorityClassName: gardener-system-200
      containers:
        - name: shoot-cert-management-seed
          image: example.com/gardener-project/releases/cert-controller-manager:v0.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
              name: kubeconfig
              readOnly: true
            - name: ca-certificates
              mountPath: /var/run/cert-manager/certs
              readOnly: true
          args:
            - --name=cert-controller-manager
            - --namespace=kube-system
            - --source=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
            - --issuer.issuer-namespace=shoot--foo--bar
            - --issuer.default-issuer=garden
            - --issuer.default-requests-per-day-quota=100
            - --issuer.dns-namespace=shoot--foo--bar
            - --server-port-http=10258
            - --ingress-cert.targets.pool.size=5
            - --service-cert.targets.pool.size=5
            - --issuer.default.pool.size=2
            - --acme-deactivate-authorizations
            - --lease-name=shoot-cert-service
            - --lease-resource-lock=leases
            - --kubeconfig.disable-deploy-crds
            - --source.disable-deploy-crds
            - --target.disable-deploy-crds
            - --default-private-key-algorithm=RSA
            - --default-rsa-private-key-size=3072
            - --default-ecdsa-private-key-size=384
          env:
            - name: LEGO_CA_SYSTEM_CERT_POOL
              value: "true"
            - name: LEGO_CA_CERTIFICATES
              value: /var/run/cert-manager/certs/certs.pem
          ports:
            - name: metrics
              containerPort: 10258
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10258
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
      volumes:
        - name: kubeconfig
          projected:
            defaultMode: 420
            sources:
              - secret:
                  items:
                    - key: kubeconfig
                      path: kubeconfig
                  name: generic-token-kubeconfig-71a3f1a4
                  optional: false
              - secret:
                  items:
                    - key: token
                      path: token
                  name: shoot-access-extension-shoot-cert-service
                  optional: false
        - name: ca-certificates
          configMap:
            name: cert-controller-manager-ca-certificates
      serviceAccountName: shoot-cert-management-seed
---
# Source: shoot-cert-management-seed/templates/issuer.yaml
apiVersion: cert.gardener.cloud/v1alpha1
kind: Issuer
metadata:
  name: garden
  namespace: shoot--foo--bar
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: foo@example.com
    privateKeySecretRef:
      name: extension-shoot-cert-service-issuer-garden
      namespace: shoot--foo--bar
---
# Source: shoot-cert-management-seed/templates/vpa.yaml
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: cert-controller-manager-vpa
  namespace: shoot--foo--bar
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cert-controller-manager
  updatePolicy:
    updateMode: Auto
  resourcePolicy:
    containerPolicies:
      - containerName: '*'
        controlledValues: RequestsOnly
        controlledResources: [memory]
        minAllowed:
          memory: 20Mi